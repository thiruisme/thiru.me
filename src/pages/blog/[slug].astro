---
// 1️⃣ Imports + Static Paths
import Layout from "../../components/Layout.astro";
import { getCollection, getEntryBySlug, render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((p) => ({
    params: { slug: p.slug },
  }));
}

// 2️⃣ Fetch + compile
const { slug } = Astro.params;
const post = await getEntryBySlug("posts", slug);
if (!post) throw new Error(`Post not found: ${slug}`);

const desc = post.data.excerpt || post.data.title;
const { Content } = await render(post);

// Format date and time
const postDate = new Date(post.data.datetime);
const dateOptions: Intl.DateTimeFormatOptions = {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  timeZone: 'Asia/Kolkata',
};
const timeOptions: Intl.DateTimeFormatOptions = {
  hour: '2-digit',
  minute: '2-digit',
  hour12: true,
  timeZone: 'Asia/Kolkata',
};

const formattedDate = postDate.toLocaleDateString('en-IN', dateOptions);
const formattedTime = postDate.toLocaleTimeString('en-IN', timeOptions);
---

<style>
  /* Styles are now applied to the new container div */
  .blog-post-container {
    max-width: 600px;
    width: 100%;
    margin: 0 auto;
  }
  
  /* This selector still works perfectly, as images are inside the <article> tag */
  article img {
    display: block;
    width: 100%;
    max-width: 680px;
    margin: 1.5rem auto;
  }
  
  .post-meta {
    color: #666;
    font-style: italic;
    margin-bottom: 1rem;
  }
  
  .post-meta time {
    display: inline-block;
  }
  
  .blog-hero-image {
    margin: 2rem 0;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  
  .hero-image {
    width: 100%;
    aspect-ratio: 16/9;
    object-fit: cover;
    display: block;
    margin: 0;
    background: var(--card-bg);
  }
  
  @media (max-width: 768px) {
    .blog-hero-image {
      margin: 1.5rem 0;
    }
  }
</style>

<Layout current="blog" hero={true} title={`${post.data.title} – Thiru's Internet Corner`} description={desc}>
  <!-- ✅ New container DIV with the main styling class -->
  <div class="blog-post-container prose-blog">
    
    <div class="back-button">
      <a href="/blog/">← Back to Blog</a>
    </div>
    
    {post.data.thumbnail && (
      <div class="blog-hero-image">
        <img
          src={post.data.thumbnail}
          alt={post.data.thumbnailAlt || post.data.title}
          class="hero-image"
        />
      </div>
    )}
    
    <h1 class="post-date">{post.data.title}</h1>
    <p class="post-meta">
      <time datetime={post.data.datetime.toISOString()}>
        {formattedDate} at {formattedTime}
      </time>
    </p>
    {post.data.tags && (
      <>
        <p style="margin-bottom:1rem;">
          Tags:
          {post.data.tags.map((t) => (
            <>
              {' '}
              <a class="tag" href={`/tags/${t}/`}>{t}</a>
            </>
          ))}
        </p>
        <hr />
      </>
    )}
    
    <article>
      <Content />
    </article>
    
    <div class="back-button">
      <a href="/blog/">← Back to Blog</a>
    </div>
  </div>
</Layout>